import java.math.BigInteger;//DO NOT CHANGE ANY OF THIS CODEpublic class Driver {	public static void main(String[] args) {		ListInterface<String> myList = new DLinkedList<>();				System.out.println("Is List empty? " + myList.isEmpty());		myList.displayList();				System.out.println("Testing add to end: Add 15, 25, 35, 45");		myList.add("15");		myList.add("25");		myList.add("35");		myList.add("45");		System.out.println("\nList should contain 15 25 35 45 ");		myList.displayList();				System.out.println("\ntoArray test");		Object[] array = myList.toArray();		for(int index = 0; index < array.length; index++)			System.out.print(array[index] + " ");		System.out.println();		System.out.println("Is List empty? " + myList.isEmpty());		System.out.println("\nAdd more entries to end: Add 55, 65 ");		myList.add("55");		myList.add("65");		System.out.println("Is List empty? " + myList.isEmpty());		System.out.println("List should contain 15 25 35 45 55 65");		myList.displayList();		System.out.println("\nTesting clear() ");		myList.clear();		System.out.println("List should be empty: ");		myList.displayList();		System.out.println("Is list empty? " + myList.isEmpty());				ListInterface<BigInteger> anotherList = new DLinkedList<>();		System.out.println("\nTesting add at position ");		System.out.println("Add 11 at position 1:");		anotherList.add(1, new BigInteger("11"));		System.out.println("Add 22 at position 2:");		anotherList.add(2, new BigInteger("22"));		System.out.println("Add 33 at position 3:");		anotherList.add(3, new BigInteger("33"));		System.out.println("Add 00 at position 0:");		try {			anotherList.add(0, new BigInteger("00"));		} catch (IndexOutOfBoundsException error) {			System.out.println("Caught Exception");		}		System.out.println("Add 55 at position 5:");		try {			anotherList.add(5, new BigInteger("55"));		} catch (IndexOutOfBoundsException error) {			System.out.println("Caught Exception");		}		System.out.println("Add 44 at position 4:");		try {			anotherList.add(4, new BigInteger("44"));		} catch (IndexOutOfBoundsException error) {			System.out.println("Caught Exception");		}		anotherList.displayList();		System.out.println("Is List empty? " + anotherList.isEmpty());		System.out.println("Add 77 at position 1:");		anotherList.add(1, new BigInteger("77"));		System.out.println("Add 66 at position 6:");		anotherList.add(6, new BigInteger("66"));		anotherList.displayList();		System.out.println("Is List empty? " + anotherList.isEmpty());		System.out.println("\nTesting remove() ");		System.out.println("Removing at position 3: returns " + anotherList.remove(3));		System.out.println("Removing at position 1: returns " + anotherList.remove(1));		System.out.println("Removing at position size: returns " + anotherList.remove(anotherList.getLength()));		anotherList.displayList();		System.out.println("\nTesting replace() ");		System.out.println("Replace at position 1 with 91 ");		System.out.println("Replaced " + anotherList.replace(1, new BigInteger("91")));		System.out.println("Replace at position 3 with 93 ");		System.out.println("Replaced " + anotherList.replace(3, new BigInteger("93")));		System.out.println("Replace at position size with 999 ");		System.out.println("Replaced " + anotherList.replace(anotherList.getLength(), new BigInteger("999")));		anotherList.displayList();		System.out.println("Is List empty? " + anotherList.isEmpty());		System.out.println("\nTesting contains() ");		System.out.println("List contains 91: " + anotherList.contains(new BigInteger("91")));		System.out.println("List contains 11: " + anotherList.contains(new BigInteger("11")));		System.out.println("List contains 33  returns : " + anotherList.contains(new BigInteger("33")));		System.out.println("List contains 44 returns : " + anotherList.contains(new BigInteger("44")));		anotherList.add(new BigInteger("-1"));		System.out.println("\nTesting getEntry() ");		int numberOfEntries = anotherList.getLength();		System.out.println("\nThe list contains " + numberOfEntries + " entries, as follows:");		for (int position = 1; position <= numberOfEntries; position++)			System.out.println(anotherList.getEntry(position) + " is entry " + position);		System.out.println();		System.out.println("\n\nDone.");	} // end main	}